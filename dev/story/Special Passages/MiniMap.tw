:: MiniMap [special]
<!-- 
MiniMap.tw - Twine Special Passage for Enhanced Minimap System
This passage initializes the new MinimapSystem and provides integration hooks.
-->

<script>
// Initialize minimap system when this passage is processed
$(document).ready(function() {
    // Wait for all systems to be loaded
    setTimeout(() => {
        if (typeof MinimapSystem !== 'undefined' && setup.SidebarUI) {
            // Initialize minimap if not already done
            if (!setup.SidebarUI.minimapSystem) {
                setup.SidebarUI.initializeMinimap();
            }
        } else {
            console.warn('[MiniMap] Required systems not available');
        }
    }, 500);
});

// Global minimap update functions for backward compatibility
window.updateMinimapLegacy = function(mapId, position) {
    if (setup.SidebarUI && setup.SidebarUI.updateMinimap) {
        setup.SidebarUI.updateMinimap(mapId, position);
    }
};

window.refreshMinimapLegacy = function() {
    if (setup.SidebarUI && setup.SidebarUI.refreshMinimap) {
        setup.SidebarUI.refreshMinimap();
    }
};

// Integration with existing navigation events
$(document).on(':passagedisplay', function() {
    // Update minimap when passages change
    if (setup.SidebarUI && setup.SidebarUI.minimapSystem) {
        const currentMap = State.variables.currentMap;
        const playerPos = State.variables.playerPosition;
        
        if (currentMap && playerPos) {
            setup.SidebarUI.updateMinimap(currentMap, playerPos);
        }
    }
});

console.log('[MiniMap] Enhanced minimap system integration loaded');
</script>
